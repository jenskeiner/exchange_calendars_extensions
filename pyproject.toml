[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "exchange-calendars-extensions"
dynamic = ["version"]
description = "Extensions of the exchange-calendars package"
license = "Apache-2.0"
authors = [{name = "Jens Keiner", email="jens.keiner@gmail.com"}]
readme = "README.md"
requires-python = ">=3.10"
homepage = "https://github.com/jenskeiner/exchange_calendars_extensions/"
repository = "https://github.com/jenskeiner/exchange_calendars_extensions/"
documentation = "https://github.com/jenskeiner/exchange_calendars_extensions/tree/main/docs/"
keywords = ["exchange", "calendar", "trading", "holidays"]
classifiers = [
	"Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "exchange-calendars-extensions-api>=0.4.2,<1",
    "exchange-calendars>=4.0.1,<5",
    "typing-extensions >=4.0,<5",
    "pydantic >=2.0,<3",
]

[tool.hatch.version]
source = "env"
variable = "PACKAGE_VERSION"

[tool.hatch.build.targets.sdist]
exclude = [
  ".github",
  ".pre-commit-config.yaml",
]

[tool.hatch.build.targets.wheel]
sources = ["src"]
only-include = ["src/exchange_calendars_extensions"]

[dependency-groups]
dev = [
    "pytest>=7.3.1,<8.4.0",
    "pytest-mock>=3.11.1,<3.15.0",
    "pytest-cov>=4.1,<6.1",
    "pre-commit>=3.3.3,<4.1.0",
]

[tool.pytest.ini_options]
addopts = "--cov=src/exchange_calendars_extensions --cov-report=term-missing"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Assume Python 3.10.
target-version = "py310"

[lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E501"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Unlike Flake8, default to a complexity level of 10.
mccabe = 10