name: Publish Python distributions to PyPI

on:
  release:
    types: [published]

env:
  PACKAGE_NAME: exchange_calendars_extensions
  MODULE_NAME: exchange_calendars_extensions.core
  PYTHON_VERSION: "3.12"

jobs:
  build-and-publish:
    name: Build and publish Python distributions to TestPyPI and PyPI.
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true        
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      run: uv python install ${{ env.PYTHON_VERSION }}
    - name: Determine version number.
      run: |
        export PACKAGE_VERSION=${{ github.ref_name }}
        echo "Version is $PACKAGE_VERSION."
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
    - name: Build package
      run: uv build
    - name: Publish package to Test PyPI.
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    - name: Test that the package can be installed and imported (Test PyPI).
      run: |
        i=0
        max=10
        exists=0
        while [ $i -lt $max ] && [ $exists -eq 0 ]; do
            i=$(expr $i + 1)
            if curl -f -s https://test.pypi.org/pypi/${{ env.PACKAGE_NAME }}/json | jq -e ".releases | has(\"${{ env.PACKAGE_VERSION }}\")" &> /dev/null; then
                echo "$i/$max Package has appeared in index."
                exists=1
            else
                echo "$i/$max Package has not appeared in index yet. Sleeping 5s."
                sleep 5s
            fi
        done
        if [ $exists -ne 0 ]; then
            sleep 5s
            i=0
            max=3
            while [ $i -lt $max ]; do
                if uv run -n --refresh --default-index https://test.pypi.org/simple --index https://pypi.org/simple --index-strategy unsafe-best-match --with "${{ env.PACKAGE_NAME }}==${{ env.PACKAGE_VERSION }}" --no-project -- python -c 'from importlib.metadata import version;print(version("${{ env.MODULE_NAME }}"))'; then
                    exit 0
                else
                    echo "The command failed. Retrying $i/$max."
                    i=$(expr $i + 1)
                    sleep 5s
                fi
            done
            echo "The command failed $i/$max times. Failing the job."
            exit 1
        else
            echo "The package was not found in the package index. Test installation and import failed."
            exit 1
        fi
    - name: Delete distribution files.
      run: rm -rf dist  
    - name: Build package
      run: uv build
    - name: Publish package to PyPI.
      uses: pypa/gh-action-pypi-publish@release/v1
    - name: Test that the package can be installed and imported (PyPI).
      run: |
        i=0
        max=10
        exists=0
        while [ $i -lt $max ] && [ $exists -eq 0 ]; do
            i=$(expr $i + 1)
            if curl -f -s https://pypi.org/pypi/${{ env.PACKAGE_NAME }}/json | jq -e ".releases | has(\"${{ env.PACKAGE_VERSION }}\")" &> /dev/null; then
                echo "$i/$max Package has appeared in index."
                exists=1
            else
                echo "$i/$max Package has not appeared in index yet. Sleeping 5s."
                sleep 5s
            fi
        done
        if [ $exists -ne 0 ]; then
            sleep 5s
            i=0
            max=3
            while [ $i -lt $max ]; do
                if uv run -n --refresh --default-index https://pypi.org/simple --index https://pypi.org/simple --with "${{ env.PACKAGE_NAME }}==${{ env.PACKAGE_VERSION }}" --no-project -- python -c 'from importlib.metadata import version;print(version("${{ env.MODULE_NAME }}"))'; then
                    exit 0
                else
                    echo "The command failed. Retrying $i/$max."
                    i=$(expr $i + 1)
                    sleep 5s
                fi
            done
            echo "The command failed $i/$max times. Failing the job."
            exit 1
        else
            echo "The package was not found in the package index. Test installation and import failed."
            exit 1
        fi