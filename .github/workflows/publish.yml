name: Publish Python distributions to PyPI

on:
  release:
    types: [published]

env:
  PACKAGE_NAME: exchange_calendars_extensions

jobs:
  build-and-publish:
    name: Build and publish Python distributions to TestPyPI and PyPI.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry.
      run: pipx install poetry
    - name: Set up Python 3.10.
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'poetry'
    - name: Set poetry package version from tag.
      run: poetry version ${{ github.ref_name }}
    - name: Generate requirements.txt.
      run: poetry export -f requirements.txt --without-hashes > requirements.txt
    - name: Build package with poetry.
      run: poetry build
    - name: Publish package to Test PyPI.
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
    - name: Install from testpypi and import.
      run: |
        i=0
        while (($i<120)) && [[ ! $(curl --max-time 120 -s https://test.pypi.org/pypi/${{ env.PACKAGE_NAME }}/json | jq -r '.releases | keys[]') =~ (^|[[:space:]])${{ github.ref_name }}($|[[:space:]]) ]];\
          do echo waiting for package to appear in test index, sleeping 5s; sleep 5s; let i++; done
        pip install --index-url https://test.pypi.org/simple ${{ env.PACKAGE_NAME }}==${{ github.ref_name }} --no-deps
        pip install -r requirements.txt
        python -c 'import ${{ env.PACKAGE_NAME }};print(${{ env.PACKAGE_NAME }}.__version__)'
    - name: Clean pip
      run: |
        pip uninstall -y ${{ env.PACKAGE_NAME }}
        pip cache purge
    - name: Publish package to PyPI.
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
    - name: Install and import.
      run: |
        i=0
        while (($i<120)) && [[ ! $(curl --max-time 120 -s https://pypi.org/pypi/${{ env.PACKAGE_NAME }}/json | jq -r '.releases | keys[]') =~ (^|[[:space:]])${{ github.ref_name }}($|[[:space:]]) ]];\
          do echo waiting for package to appear in index, sleeping 5s; sleep 5s; let i++; done
        pip install --index-url https://pypi.org/simple ${{ env.PACKAGE_NAME }}==${{ github.ref_name }}
        python -c 'import ${{ env.PACKAGE_NAME }};print(${{ env.PACKAGE_NAME }}.__version__)'
